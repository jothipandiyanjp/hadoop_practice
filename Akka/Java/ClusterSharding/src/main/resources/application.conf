
akka {

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    serializers {
      java = "akka.serialization.JavaSerializer"
    }
    serialization-bindings {
      "akka.cluster.example.Counter" = java
    }
  }
  remote {
    log-remote-lifecycle-events = off
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }

  cluster {
    seed-nodes = [
      "akka.tcp://ClusterSystem@127.0.0.1:2551",
  #   "akka.tcp://ClusterSystem@127.0.0.1:2552"
  ]

    auto-down-unreachable-after = 10s
  }
  
    persistence {
    	journal.plugin = "akka.persistence.journal.leveldb"
    	snapshot-store.plugin = "akka.persistence.snapshot-store.local"
    	journal.leveldb.dir = "target/example/journal"
    	snapshot-store.local.dir = "target/example/snapshots1"
  	
    }
}


akka.cluster.metrics.enabled=off

akka.extensions=["akka.cluster.client.ClusterClientReceptionist"]

akka.cluster.metrics.native-library-extract-folder=${user.dir}/target/native

akka.cluster.sharding {
	  guardian-name = sharding
	
	  role = ""
	  remember-entities = off
	  coordinator-failure-backoff = 5 s
	   retry-interval = 2 s
	   buffer-size = 100000
	   handoff-timeout = 60 s
	   shard-start-timeout = 10 s
	   shard-failure-backoff = 10 s
	   entity-restart-backoff = 10 s
	   rebalance-interval = 10 s
	   journal-plugin-id = ""
	   snapshot-plugin-id = ""
	   state-store-mode = "persistence"
	   snapshot-after = 1000
	   least-shard-allocation-strategy {
	 		    rebalance-threshold = 10
	 		    max-simultaneous-rebalance = 3
	 	}
	 	  waiting-for-state-timeout = 5 s
	 	  updating-state-timeout = 5 s
	 	  coordinator-singleton = ${akka.cluster.singleton}
	 	  use-dispatcher = ""
	 	
	 }
